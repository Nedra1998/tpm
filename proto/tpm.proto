syntax = "proto3";
package tpm;

service TPM {
  rpc SysInfo(InfoRequest) returns (InfoResponse) {}
}

message InfoRequest {
  optional PlatformInfoRequest platforms = 1;
}

message InfoResponse {
  repeated PlatformInfo platforms = 1;
}

message PlatformInfoRequest {
  optional DeviceInfoRequest devices = 1;
  optional bool profile = 2;
  optional bool version = 3;
  optional bool name= 4;
  optional bool vendor= 5;
}
message DeviceInfoRequest {
  optional bool type = 1;
  optional bool vendor_id = 2;
  optional bool max_compute_units = 3;
  optional bool max_work_item_dimensions = 4;
  optional bool max_work_item_sizes = 5;
  optional bool max_work_group_size = 6;
  optional bool max_clock_frequency = 7;
  optional bool max_mem_alloc_size = 8;
  optional bool il_version = 9;
  optional bool available = 10;
  optional bool compiler_available = 11;
  optional bool linker_available = 12;
  optional bool name = 13;
  optional bool vendor = 14;
  optional bool profile = 15;
  optional bool version = 16;
}

message PlatformInfo {
  repeated DeviceInfo devices = 1;
  optional string profile = 2;
  optional string version = 3;
  optional string name= 4;
  optional string vendor= 5;
}

message DeviceInfo {
  enum DeviceType {
    DEFAULT = 0;
    CPU = 1;
    GPU = 2;
    ACCELERATOR = 3;
    CUSTOM = 4;
    ALL = 5;
  }
  optional DeviceType type = 1;
  optional uint32 vendor_id = 2;
  optional uint32 max_compute_units = 3;
  optional uint32 max_work_item_dimensions = 4;
  repeated uint64 max_work_item_sizes = 5;
  optional uint64 max_work_group_size = 6;
  optional uint32 max_clock_frequency = 7;
  optional uint64 max_mem_alloc_size = 8;
  repeated string il_version = 9;
  optional bool available = 10;
  optional bool compiler_available = 11;
  optional bool linker_available = 12;
  optional string name = 13;
  optional string vendor = 14;
  optional string profile = 15;
  optional string version = 16;
}
